{"version":3,"sources":["assets/images/p1Back.jpg","components/Home.js","assets/javascripts/war.js","components/Scoreboard.js","components/WarBoard.js","components/War.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","state","Component","cards","this","length","i","j","Math","floor","random","shift","suite","rank","deck","push","shuffle","buildCards","Scoreboard","props","userScore","computerScore","Table","striped","bordered","hover","variant","WarBoard","isLoaded","card1Image","card2Image","card1","card2","p1Image4","p1Card4","p2Image4","p2Card4","className","src","alt","backOfCard","War","cardDeck","draw","color","image1","image2","rankedCardValue1","rankedCardValue2","warRankedCardValue1","warRankedCardValue2","initWar","showWar","getCards","setState","getCardsFromApi","updateScore","axios","get","then","res","deckId","data","deck_id","setTimeout","image","warCard1","warCard2","suitRankings","ACE","KING","QUEEN","JACK","10","9","8","7","6","5","4","3","2","1","value","prevState","runWar","getCardsForPlayer1","getCardsForPlayer2","Button","onClick","App","basename","to","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.efceb70d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/p1Back.d4876dce.jpg\";","import React, { Component } from \"react\";\nclass Home extends Component {\n  state = {};\n  render() {\n    return <div>Home</div>;\n  }\n}\n\nexport default Home;\n","class CardDeck {\n  constructor(cards) {\n    this.cards = cards;\n  }\n  size() {\n    return this.cards.length;\n  }\n  shuffle() {\n    let cards = this.cards;\n    for (let i = cards.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [cards[i], cards[j]] = [cards[j], cards[i]];\n    }\n    return cards;\n  }\n  draw() {\n    let cards = this.cards;\n    return cards.shift();\n  }\n}\n\nfunction buildCards() {\n  const suite = [\"♠︎\", \"♣︎\", \"♥︎\", \"♦︎\"];\n  const rank = [\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \"10\",\n    \"J\",\n    \"Q\",\n    \"K\",\n    \"A\"\n  ];\n  let deck = [];\n  for (let i = 0; i <= suite.length - 1; i++) {\n    for (let j = 0; j <= rank.length - 1; j++) {\n      deck.push({ suite: suite[i], rank: rank[j] });\n    }\n  }\n  function shuffle(cards) {\n    for (let i = cards.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [cards[i], cards[j]] = [cards[j], cards[i]];\n    }\n    return cards;\n  }\n  return shuffle(deck);\n}\nvar cards = new CardDeck(buildCards());\n\nexport default cards;\n","import React, { Component } from \"react\";\nimport { Table } from \"react-bootstrap\";\n\nclass Scoreboard extends Component {\n  state = {};\n\n  render() {\n    const { userScore, computerScore } = this.props;\n    return (\n      <Table striped bordered hover variant=\"dark\">\n        <thead>\n          <tr>\n            <th>Your Score</th>\n            <th>Computer Score</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td>{userScore}</td>\n            <td>{computerScore}</td>\n          </tr>\n        </tbody>\n      </Table>\n    );\n  }\n}\n\nexport default Scoreboard;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport warBoard from \"../assets/stylesheets/warBoard.css\";\nimport backOfCard from \"../assets/images/p1Back.jpg\";\n\nclass WarBoard extends Component {\n  state = {\n    isLoaded: false\n  };\n\n  componentDidMount() {}\n  render() {\n    const {\n      card1Image,\n      card2Image,\n      card1,\n      card2,\n      p1Image4,\n      p1Card4,\n      p2Image4,\n      p2Card4\n    } = this.props;\n    return (\n      <div>\n        <strong>You</strong>\n        <div className=\"card1-container container\">\n          <img src={card1Image} alt={card1}></img>\n\n          <img\n            src={backOfCard}\n            alt=\"face down card\"\n            className=\"card-1 back-of-card\"\n          ></img>\n          <img\n            src={backOfCard}\n            alt=\"face down card\"\n            className=\"card-2 back-of-card\"\n          ></img>\n          <img\n            src={backOfCard}\n            alt=\"face down card\"\n            className=\"card-3 back-of-card\"\n          ></img>\n          <img src={p1Image4} alt={p1Card4} className=\"card-4 top-card\"></img>\n        </div>\n        <strong>Computer</strong>\n        <div className=\"card2-container container\">\n          <img src={card2Image} alt={card2}></img>\n\n          <img\n            src={backOfCard}\n            alt=\"face down card\"\n            className=\"card-4 back-of-card\"\n          ></img>\n          <img\n            src={backOfCard}\n            alt=\"face down card\"\n            className=\"card-5 back-of-card\"\n          ></img>\n          <img\n            src={backOfCard}\n            alt=\"face down card\"\n            className=\"card-6 back-of-card\"\n          ></img>\n          <img src={p2Image4} alt={p2Card4} className=\"card-7 top-card\"></img>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default WarBoard;\n","import React, { Component } from \"react\";\nimport \"../assets/stylesheets/war.css\";\nimport cards from \"../assets/javascripts/war.js\";\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport Scoreboard from \"./Scoreboard\";\nimport { Prev } from \"react-bootstrap/PageItem\";\nimport WarBoard from \"./WarBoard\";\n\nclass War extends Component {\n  state = {\n    cardDeck: cards,\n    draw: cards.draw(),\n    color: \"black\",\n    image1: null,\n    image2: null,\n    card1: null,\n    card2: null,\n    userScore: 0,\n    p1Image4: null,\n    p1Card4: null,\n    p2Image4: null,\n    p2Card4: null,\n    computerScore: 0,\n    isLoaded: false,\n    rankedCardValue1: null,\n    rankedCardValue2: null,\n    warRankedCardValue1: null,\n    warRankedCardValue2: null,\n    initWar: false,\n    showWar: false\n  };\n\n  getCards = () => {\n    const { isLoaded } = this.state;\n    cards.shuffle();\n\n    this.setState({\n      cardDeck: cards.shuffle(),\n      isLoaded: !isLoaded\n    });\n    this.draw();\n    this.getCardsFromApi();\n    this.updateScore();\n  };\n  draw = () => {\n    this.setState({\n      draw: cards.draw()\n    });\n  };\n  getCardsFromApi = () => {\n    const { isLoaded } = this.state;\n    axios\n      .get(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\")\n      .then(res => {\n        const deckId = res.data.deck_id;\n\n        setTimeout(() => {\n          axios\n            .get(`https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=2`)\n            .then(res => {\n              const card1 = res.data.cards[0];\n              const card2 = res.data.cards[1];\n\n              this.setState({\n                image1: card1.image,\n                image2: card2.image,\n                card1,\n                card2,\n                deckId: deckId,\n                isLoaded: !isLoaded\n              });\n            });\n        }, 200);\n        setTimeout(() => {\n          this.updateScore();\n        }, 800);\n      });\n    const { showWar, initWar } = this.state;\n    if (initWar) {\n      this.setState({ initWar: false });\n    }\n  };\n  updateScore = (warCard1, warCard2) => {\n    let { card1, card2, isLoaded } = this.state;\n    card1 = warCard1 || card1;\n    card2 = warCard2 || card2;\n    // remove after test  for war\n    // card1.value = 7;\n    // card2.value = 7;\n    // end test\n\n    if (card1 && card2) {\n      const suitRankings = {\n        ACE: 14,\n        KING: 13,\n        QUEEN: 12,\n        JACK: 11,\n        10: 10,\n        9: 9,\n        8: 8,\n        7: 7,\n        6: 6,\n        5: 5,\n        4: 4,\n        3: 3,\n        2: 2,\n        1: 1\n      };\n\n      this.setState({\n        rankedCardValue1: suitRankings[card1.value],\n        rankedCardValue2: suitRankings[card2.value]\n      });\n    }\n\n    setTimeout(() => {\n      const { rankedCardValue1, rankedCardValue2 } = this.state;\n      if (rankedCardValue1 > rankedCardValue2) {\n        this.setState(prevState => {\n          return {\n            userScore: (prevState.userScore += 1)\n          };\n        });\n      }\n      if (rankedCardValue2 > rankedCardValue1) {\n        this.setState(prevState => {\n          return {\n            computerScore: (prevState.computerScore += 1)\n          };\n        });\n      }\n      if (rankedCardValue1 == rankedCardValue2) {\n        const { initWar } = this.state;\n        this.setState({\n          initWar: !initWar\n        });\n        this.runWar();\n      }\n    }, 100);\n  };\n  runWar = () => {\n    this.getCardsForPlayer1();\n    this.getCardsForPlayer2();\n    const { isLoaded } = this.state;\n    if (!isLoaded) {\n      const { p1Card4, p2Card4 } = this.state;\n      if (p1Card4 && p2Card4) {\n        const suitRankings = {\n          ACE: 14,\n          KING: 13,\n          QUEEN: 12,\n          JACK: 11,\n          10: 10,\n          9: 9,\n          8: 8,\n          7: 7,\n          6: 6,\n          5: 5,\n          4: 4,\n          3: 3,\n          2: 2,\n          1: 1\n        };\n\n        this.setState({\n          warRankedCardValue1: suitRankings[p1Card4.value],\n          warRankedCardValue2: suitRankings[p2Card4.value]\n        });\n        setTimeout(() => {\n          const { warRankedCardValue1, warRankedCardValue2 } = this.state;\n          if (warRankedCardValue1 > warRankedCardValue2) {\n            this.setState(prevState => {\n              return {\n                userScore: (prevState.userScore += 1)\n              };\n            });\n          }\n          if (warRankedCardValue2 > warRankedCardValue1) {\n            this.setState(prevState => {\n              return {\n                computerScore: (prevState.computerScore += 1)\n              };\n            });\n          }\n          if (warRankedCardValue1 == warRankedCardValue2) {\n            const { initWar } = this.state;\n            this.setState({\n              initWar: !initWar\n            });\n          }\n        }, 100);\n      }\n    }\n  };\n  getCardsForPlayer1 = () => {\n    const { isLoaded, deckId } = this.state;\n\n    axios\n      .get(`https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=4`)\n      .then(res => {\n        const p1Card4 = res.data.cards[3];\n\n        this.setState({\n          p1Image4: p1Card4.image,\n          p1Card4,\n          deckId: deckId,\n          isLoaded: !isLoaded\n        });\n      });\n  };\n  getCardsForPlayer2 = () => {\n    const { isLoaded, deckId } = this.state;\n\n    axios\n      .get(`https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=8`)\n      .then(res => {\n        const p2Card4 = res.data.cards[6];\n\n        this.setState({\n          p2Image4: p2Card4.image,\n          p2Card4,\n          deckId: deckId,\n          isLoaded: !isLoaded\n        });\n      });\n  };\n  getCards = () => {\n    const { card1, card2, isLoaded } = this.state;\n    this.getCardsFromApi();\n  };\n  componentDidMount() {\n    this.getCardsFromApi();\n  }\n  componentDidUpdate() {}\n  render() {\n    const {\n      draw,\n      image1,\n      image2,\n      card1,\n      card2,\n      isLoaded,\n      userScore,\n      computerScore,\n      initWar,\n      deckId,\n      p1Image4,\n      p1Card4,\n      p2Image4,\n      p2Card4\n    } = this.state;\n\n    return (\n      <div className=\"card-container\">\n        <Button variant=\"outline-primary\" onClick={() => this.getCards()}>\n          Get Card\n        </Button>\n        <Scoreboard\n          card1={card1}\n          card2={card2}\n          userScore={userScore}\n          computerScore={computerScore}\n          isLoaded={isLoaded}\n        />\n        {initWar ? (\n          <>\n            <strong> WAR </strong>\n            <WarBoard\n              deckId={deckId}\n              card1Image={image1}\n              card2Image={image2}\n              card1={card1}\n              card2={card2}\n              p1Image4={p1Image4}\n              p1Card4={p1Card4}\n              p2Image4={p2Image4}\n              p2Card4={p2Card4}\n              userScore={userScore}\n              computerScore={computerScore}\n            />\n          </>\n        ) : (\n          <>\n            <div className=\"card1 container\">\n              <strong>You</strong>\n              <img src={image1} alt={card1}></img>\n            </div>\n            <div className=\"card2 container\">\n              <strong>Computer</strong>\n              <img src={image2} alt={card2}></img>\n            </div>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default War;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport War from \"./components/War\";\nfunction App() {\n  return (\n    <Router basename=\"/card_games\">\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/card_games\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/war\">War</Link>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/war\">\n            <War />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}